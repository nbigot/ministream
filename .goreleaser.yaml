project_name: ministream

builds:
  -
    skip: false
    id: ministream
    binary: ministream
    env: [CGO_ENABLED=0]
    goos:
      - linux
      - windows
    goarch:
      - amd64
      - arm64
      - arm
    goamd64:
      - v2
      - v3
    goarm:
      - 7
    mod_timestamp: "{{ .CommitTimestamp }}"
    ldflags:
      - -X main.Version=v{{ .Major }}.{{ .Minor }}.{{ .Patch }}
    main: ./cmd/ministream/ministream.go
    ignore:
      - goos: windows
        goarch: arm64
      - goos: windows
        goarch: arm
  -
    skip: false
    id: generatepasswords
    env: [CGO_ENABLED=0]
    goos:
      - linux
      - windows
    goarch:
      - amd64
      - arm64
      - arm
    goamd64:
      - v2
      - v3
    goarm:
      - 7
    mod_timestamp: "{{ .CommitTimestamp }}"
    ldflags:
      - -X main.Version=v{{ .Major }}.{{ .Minor }}.{{ .Patch }}
    main: ./cmd/generatepasswords/generatepasswords.go
    binary: generatepasswords
    ignore:
      - goos: windows
        goarch: arm64
      - goos: windows
        goarch: arm

dockers:
  -
    #skip_push: false
    ids:
    - ministream
    - generatepasswords
    use: buildx
    image_templates:
      - "ghcr.io/nbigot/{{ .ProjectName }}:latest-linux-amd64-v2"
      - "ghcr.io/nbigot/{{ .ProjectName }}:{{ .Major }}.{{ .Minor }}.{{ .Patch }}-linux-amd64-v2"
    dockerfile: Dockerfile-goreleaser
    goos: linux
    goarch: amd64
    goamd64: v2
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--build-arg=MINISTREAM_VERSION=v{{ .Major }}.{{ .Minor }}.{{ .Patch }}"
      - --label=org.opencontainers.image.title={{ .ProjectName }}
      - --label=org.opencontainers.image.description={{ .ProjectName }}
      - --label=org.opencontainers.image.url=https://github.com/nbigot/ministream
      - --label=org.opencontainers.image.source=https://github.com/nbigot/ministream
      - --label=org.opencontainers.image.version={{ .Major }}.{{ .Minor }}.{{ .Patch }}
      - --label=org.opencontainers.image.created={{ .CommitTimestamp }}
      - --label=org.opencontainers.image.revision={{ .FullCommit }}
      - --label=org.opencontainers.image.licenses=MIT
    extra_files:
      - config-templates/docker/config/config.yaml
      - config-templates/docker/data/storage/streams.json
  -
    #skip_push: false
    ids:
    - ministream
    - generatepasswords
    use: buildx
    image_templates:
      - "ghcr.io/nbigot/{{ .ProjectName }}:latest-linux-amd64-v3"
      - "ghcr.io/nbigot/{{ .ProjectName }}:{{ .Major }}.{{ .Minor }}.{{ .Patch }}-linux-amd64-v3"
    dockerfile: Dockerfile-goreleaser
    goos: linux
    goarch: amd64
    goamd64: v3
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--build-arg=MINISTREAM_VERSION=v{{ .Major }}.{{ .Minor }}.{{ .Patch }}"
      - --label=org.opencontainers.image.title={{ .ProjectName }}
      - --label=org.opencontainers.image.description={{ .ProjectName }}
      - --label=org.opencontainers.image.url=https://github.com/nbigot/ministream
      - --label=org.opencontainers.image.source=https://github.com/nbigot/ministream
      - --label=org.opencontainers.image.version={{ .Major }}.{{ .Minor }}.{{ .Patch }}
      - --label=org.opencontainers.image.created={{ .CommitTimestamp }}
      - --label=org.opencontainers.image.revision={{ .FullCommit }}
      - --label=org.opencontainers.image.licenses=MIT
    extra_files:
      - config-templates/docker/config/config.yaml
      - config-templates/docker/data/storage/streams.json
  -
    #skip_push: false
    ids:
    - ministream
    - generatepasswords
    use: buildx
    image_templates:
      - "ghcr.io/nbigot/{{ .ProjectName }}:latest-linux-arm64-v8"
      - "ghcr.io/nbigot/{{ .ProjectName }}:{{ .Major }}.{{ .Minor }}.{{ .Patch }}-linux-arm64-v8"
    dockerfile: Dockerfile-goreleaser
    goos: linux
    goarch: arm64
    build_flag_templates:
      - "--platform=linux/arm64/v8"
      - "--build-arg=MINISTREAM_VERSION=v{{ .Major }}.{{ .Minor }}.{{ .Patch }}"
      - --label=org.opencontainers.image.title={{ .ProjectName }}
      - --label=org.opencontainers.image.description={{ .ProjectName }}
      - --label=org.opencontainers.image.url=https://github.com/nbigot/ministream
      - --label=org.opencontainers.image.source=https://github.com/nbigot/ministream
      - --label=org.opencontainers.image.version={{ .Major }}.{{ .Minor }}.{{ .Patch }}
      - --label=org.opencontainers.image.created={{ .CommitTimestamp }}
      - --label=org.opencontainers.image.revision={{ .FullCommit }}
      - --label=org.opencontainers.image.licenses=MIT
    extra_files:
      - config-templates/docker/config/config.yaml
      - config-templates/docker/data/storage/streams.json
  -
    #skip_push: false
    ids:
    - ministream
    - generatepasswords
    use: buildx
    image_templates:
      - "ghcr.io/nbigot/{{ .ProjectName }}:latest-linux-arm-v7"
      - "ghcr.io/nbigot/{{ .ProjectName }}:{{ .Major }}.{{ .Minor }}.{{ .Patch }}-linux-arm-v7"
    dockerfile: Dockerfile-goreleaser
    goos: linux
    goarch: arm
    goarm: 7
    build_flag_templates:
      - "--platform=linux/arm/v7"
      - "--build-arg=MINISTREAM_VERSION=v{{ .Major }}.{{ .Minor }}.{{ .Patch }}"
      - --label=org.opencontainers.image.title={{ .ProjectName }}
      - --label=org.opencontainers.image.description={{ .ProjectName }}
      - --label=org.opencontainers.image.url=https://github.com/nbigot/ministream
      - --label=org.opencontainers.image.source=https://github.com/nbigot/ministream
      - --label=org.opencontainers.image.version={{ .Major }}.{{ .Minor }}.{{ .Patch }}
      - --label=org.opencontainers.image.created={{ .CommitTimestamp }}
      - --label=org.opencontainers.image.revision={{ .FullCommit }}
      - --label=org.opencontainers.image.licenses=MIT
    extra_files:
      - config-templates/docker/config/config.yaml
      - config-templates/docker/data/storage/streams.json

docker_manifests:
  # https://goreleaser.com/customization/docker_manifest/
  - name_template: "ghcr.io/nbigot/{{ .ProjectName }}:{{ .Major }}.{{ .Minor }}.{{ .Patch }}"
    image_templates:
      - "ghcr.io/nbigot/{{ .ProjectName }}:{{ .Major }}.{{ .Minor }}.{{ .Patch }}-linux-amd64-v2"
      - "ghcr.io/nbigot/{{ .ProjectName }}:{{ .Major }}.{{ .Minor }}.{{ .Patch }}-linux-amd64-v3"
      - "ghcr.io/nbigot/{{ .ProjectName }}:{{ .Major }}.{{ .Minor }}.{{ .Patch }}-linux-arm64-v8"
      - "ghcr.io/nbigot/{{ .ProjectName }}:{{ .Major }}.{{ .Minor }}.{{ .Patch }}-linux-arm-v7"
    #skip_push: false
  - name_template: "ghcr.io/nbigot/{{ .ProjectName }}:latest"
    image_templates:
      - "ghcr.io/nbigot/{{ .ProjectName }}:latest-linux-amd64-v2"
      - "ghcr.io/nbigot/{{ .ProjectName }}:latest-linux-amd64-v3"
      - "ghcr.io/nbigot/{{ .ProjectName }}:latest-linux-arm64-v8"
      - "ghcr.io/nbigot/{{ .ProjectName }}:latest-linux-arm-v7"
    #skip_push: false

changelog:
  # Set it to true if you wish to skip the changelog generation.
  # This may result in an empty release notes on GitHub/GitLab/Gitea.
  skip: false

  # Changelog generation implementation to use.
  #
  # Valid options are:
  # - `git`: uses `git log`;
  # - `github`: uses the compare GitHub API, appending the author login to the changelog.
  # - `gitlab`: uses the compare GitLab API, appending the author name and email to the changelog.
  # - `github-native`: uses the GitHub release notes generation API, disables the groups feature.
  #
  # Defaults to `git`.
  use: git

  # Sorts the changelog by the commit's messages.
  # Could either be asc, desc or empty
  # Default is empty
  sort: asc

  # Group commits messages by given regex and title.
  # Order value defines the order of the groups.
  # Proving no regex means all commits will be grouped under the default group.
  # Groups are disabled when using github-native, as it already groups things by itself.
  #
  # Default is no groups.
  groups:
    - title: Dependency updates
      regexp: '^.*?(feat|fix)\(deps\)!?:.+$'
      order: 300
    - title: 'New Features'
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 100
    - title: 'Bug fixes'
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 200
    - title: 'Documentation updates'
      regexp: ^.*?doc(\([[:word:]]+\))??!?:.+$
      order: 400
    - title: 'Build process updates'
      regexp: ^.*?build(\([[:word:]]+\))??!?:.+$
      order: 400
    - title: Other work
      order: 9999

  filters:
    # Commit messages matching the regexp listed here will be removed from
    # the changelog
    # Default is empty
    exclude:
      - 'CICD'
      - typo
      - '^test:'
      - '^chore'
      - 'merge conflict'
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch
      - go mod tidy
